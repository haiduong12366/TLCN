services:
  zookeeper:
    image: quay.io/debezium/zookeeper:latest
    container_name: zookeeper
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    networks:
      - tlcn_network

  kafka:
    image: quay.io/debezium/kafka:latest
    container_name: kafka
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
     - ADVERTISED_HOST_NAME=host.docker.internal
    depends_on:
      - zookeeper
    networks:
      - tlcn_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "9089:8080"
    links:
      - kafka
    networks:
      - tlcn_network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: haiduong
      MYSQL_USER: haiduong
      MYSQL_PASSWORD: haiduong
      MYSQL_DATABASE: tlcn
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    command: bash -c "chmod 600 /etc/mysql/conf.d/mysql.cnf && docker-entrypoint.sh mysqld"
    networks:
      - tlcn_network

  connect:
    image: quay.io/debezium/connect:latest
    container_name: connect
    ports:
     - 8083:8083
    depends_on:
      - kafka
    links:
     - kafka
     - mysql
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: kafka_connect_configs
      OFFSET_STORAGE_TOPIC: kafka_connect_offsets
      STATUS_STORAGE_TOPIC: kafka_connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    networks:
      - tlcn_network

  spark-master:
      image: docker.io/bitnami/spark:3.5.0
      container_name: "spark-master"
      ports:
        - "7077:7077" 
        - "8080:8080"
      expose: 
        - "7077"
      environment:
        - SPARK_MODE=master
        - SPARK_RPC_AUTHENTICATION_ENABLED=no
        - SPARK_RPC_ENCRYPTION_ENABLED=no
        - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
        - SPARK_SSL_ENABLED=no
      networks:
        - tlcn_network

  spark-worker-a:
    image: docker.io/bitnami/spark:3.5.0
    container_name: "spark-worker-a"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    volumes:
      - ./notebooks:/home/jovyan/work:rw
    networks:
      - tlcn_network

  spark-worker-b:
    image: docker.io/bitnami/spark:3.5.0
    container_name: "spark-worker-b"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    volumes:
      - ./notebooks:/home/jovyan/work:rw
    networks:
      - tlcn_network

  spark-notebook:
    image: jupyter/pyspark-notebook:x86_64-spark-3.5.0
    container_name: "spark-notebook"
    user: root
    environment:
      - GRANT_SUDO=yes
      - JUPYTER_TOKEN=haiduong
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./notebooks:/home/jovyan/work:rw
    ports:
      - "8888:8888"
    networks:
      - tlcn_network
    
  minio:
    hostname: minio
    image: docker.io/bitnami/minio:latest
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=haiduong
      - MINIO_ROOT_PASSWORD=haiduong
    networks:
      - tlcn_network

  hive-metastore:
    image: apache/hive:4.0.0
    hostname: hive-metastore
    container_name: hive-metastore
    environment:
      SERVICE_NAME: metastore
    ports:
      - "9083:9083"
    networks:
      - tlcn_network

  presto:
    image: prestodb/presto:latest
    container_name: presto
    ports:
      - "9090:9090"
    volumes:
      - ./presto/config.properties:/opt/presto-server/etc/config.properties
      - ./presto/jvm.config:/opt/presto-server/etc/jvm.config
      - ./presto/catalog:/opt/presto-server/etc/catalog
    networks:
      - tlcn_network

  superset:
      build: ./superset
      container_name: superset
      environment:
        - ADMIN_USERNAME=admin
        - ADMIN_EMAIL=admin@superset.com
        - ADMIN_PASSWORD=admin
      ports:
        - '8088:8088'
      networks:
      - tlcn_network

networks:
  tlcn_network:
    driver: bridge